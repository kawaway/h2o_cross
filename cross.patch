diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0e95190b..0dbf8384 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -75,7 +75,12 @@ OPTION(WITH_PICOTLS "whether or not to build with picotls" "ON")
 IF (WITH_BUNDLED_SSL)
     SET(BUNDLED_SSL_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/libressl-build/include")
     SET(BUNDLED_SSL_LIBRARIES "${CMAKE_CURRENT_BINARY_DIR}/libressl-build/lib/libssl.a" "${CMAKE_CURRENT_BINARY_DIR}/libressl-build/lib/libcrypto.a")
-    ADD_CUSTOM_TARGET(bundled-ssl make -f ${CMAKE_CURRENT_SOURCE_DIR}/misc/libressl.mk SOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR}/misc
+    IF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm")
+        SET(BUNDLED_SSL_CONFIG "libressl_linux-arm.mk")
+    ELSE ()
+        SET(BUNDLED_SSL_CONFIG "libressl.mk")
+    ENDIF ()
+    ADD_CUSTOM_TARGET(bundled-ssl make -f ${CMAKE_CURRENT_SOURCE_DIR}/misc/${BUNDLED_SSL_CONFIG} SOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR}/misc
         WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
 ELSE (WITH_BUNDLED_SSL)
     IF (NOT OPENSSL_FOUND)
@@ -445,7 +450,12 @@ IF (WITH_MRUBY)
     ELSE ()
         SET(MRUBY_TOOLCHAIN "gcc")
     ENDIF ()
-    ADD_CUSTOM_TARGET(mruby MRUBY_TOOLCHAIN=${MRUBY_TOOLCHAIN} MRUBY_CONFIG=${CMAKE_CURRENT_SOURCE_DIR}/misc/mruby_config.rb MRUBY_BUILD_DIR=${CMAKE_CURRENT_BINARY_DIR}/mruby ruby minirake
+    IF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm")
+        SET(CMAKE_MRUBY_CONFIG "mruby_config_linux-arm.rb")
+    ELSE ()
+        SET(CMAKE_MRUBY_CONFIG "mruby_config.rb")
+    ENDIF ()
+    ADD_CUSTOM_TARGET(mruby MRUBY_TOOLCHAIN=${MRUBY_TOOLCHAIN} MRUBY_CONFIG=${CMAKE_CURRENT_SOURCE_DIR}/misc/${CMAKE_MRUBY_CONFIG} MRUBY_BUILD_DIR=${CMAKE_CURRENT_BINARY_DIR}/mruby ruby minirake
         WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/deps/mruby)
     LIST(APPEND STANDALONE_SOURCE_FILES
         lib/handler/mruby.c
@@ -473,10 +483,16 @@ ELSE (WITH_BUNDLED_SSL)
 ENDIF (WITH_BUNDLED_SSL)
 IF (WITH_MRUBY)
     TARGET_INCLUDE_DIRECTORIES(h2o BEFORE PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/deps/mruby/include ${CMAKE_CURRENT_SOURCE_DIR}/deps/mruby-input-stream/src)
+    IF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm")
+        SET(CMAKE_MRUBY_AR_DIR "arm-linux-gnueabi")
+    ELSE ()
+        SET(CMAKE_MRUBY_AR_DIR "host")
+    ENDIF ()
+
     # note: the paths need to be determined before libmruby.flags.mak is generated
     TARGET_LINK_LIBRARIES(h2o
-        "${CMAKE_CURRENT_BINARY_DIR}/mruby/host/lib/libmruby.a"
-        "${CMAKE_CURRENT_BINARY_DIR}/mruby/host/mrbgems/mruby-onig-regexp/onigmo-6.1.1/.libs/libonigmo.a"
+        "${CMAKE_CURRENT_BINARY_DIR}/mruby/${CMAKE_MRUBY_AR_DIR}/lib/libmruby.a"
+        "${CMAKE_CURRENT_BINARY_DIR}/mruby/${CMAKE_MRUBY_AR_DIR}/mrbgems/mruby-onig-regexp/onigmo-6.1.1/.libs/libonigmo.a"
         "m")
     ADD_DEPENDENCIES(h2o mruby)
 ENDIF (WITH_MRUBY)
